{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/services/AuthService.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction AdminLoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Authentication Successful! Redirecting...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_ng_template_15_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Authentication failed. Please check your credentials. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminLoginComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AdminLoginComponent_ng_template_15_p_0_Template, 2, 0, \"p\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.username || ctx_r2.password);\n  }\n}\nexport class AdminLoginComponent {\n  constructor(http, authService, router, formBuilder) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.username = '';\n    this.password = '';\n    this.isAuthenticated = false;\n    this.url = 'https://652e8c840b8d8ddac0b194c7.mockapi.io/admin/AdminData';\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      lastName: new FormControl(''),\n      email: new FormControl(''),\n      gender: new FormControl(''),\n      birthDate: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      lastName: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      email: ['', [Validators.required, Validators.email]],\n      gender: ['', [Validators.required, Validators.email]],\n      birthDate: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    this.http.get(this.url).subscribe(data => {\n      const foundUser = data.find(user => user.userName === this.username && user.Password === this.password);\n      if (foundUser) {\n        this.authService.login(); // Set authentication status to true.\n        console.log('User authenticated');\n        // Redirect to the 'prod-list' route using the Angular router.\n        this.router.navigate(['/us-list']);\n      } else {\n        this.authService.logout(); // Set authentication status to false.\n        console.log('Authentication failed');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AdminLoginComponent_Factory(t) {\n    return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminLoginComponent,\n    selectors: [[\"app-admin-login\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\", \"ngIfElse\"], [\"failedAuthentication\", \"\"], [4, \"ngIf\"]],\n    template: function AdminLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Admin Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, AdminLoginComponent_div_14_Template, 3, 0, \"div\", 8);\n        i0.ɵɵtemplate(15, AdminLoginComponent_ng_template_15_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i5.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 450px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  margin-top: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  padding: 10px 20px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tbG9naW4vYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmZvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AdminLoginComponent_ng_template_15_p_0_Template","ɵɵproperty","ctx_r2","username","password","AdminLoginComponent","constructor","http","authService","router","formBuilder","isAuthenticated","url","form","name","lastName","email","gender","birthDate","ngOnInit","group","required","minLength","maxLength","onSubmit","get","subscribe","data","foundUser","find","user","userName","Password","login","console","log","navigate","logout","_","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","i3","Router","i4","FormBuilder","_2","selectors","decls","vars","consts","template","AdminLoginComponent_Template","rf","ctx","ɵɵlistener","AdminLoginComponent_Template_form_ngSubmit_3_listener","AdminLoginComponent_Template_input_ngModelChange_7_listener","$event","AdminLoginComponent_Template_input_ngModelChange_11_listener","AdminLoginComponent_div_14_Template","AdminLoginComponent_ng_template_15_Template","ɵɵtemplateRefExtractor","ɵɵadvance","_r1"],"sources":["/Users/b/2023/Code-Test/src/app/admin-login/admin-login.component.ts","/Users/b/2023/Code-Test/src/app/admin-login/admin-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/services/AuthService.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css'],\n})\nexport class AdminLoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n  isAuthenticated: boolean = false;\n  url: string = 'https://652e8c840b8d8ddac0b194c7.mockapi.io/admin/AdminData';\n\n  form: FormGroup = new FormGroup({\n    name: new FormControl(''),\n    lastName: new FormControl(''),\n    email: new FormControl(''),\n    gender: new FormControl(''),\n    birthDate: new FormControl(''),\n  });\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(20),\n        ],\n      ],\n      lastName: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(20),\n        ],\n      ],\n      email: ['', [Validators.required, Validators.email]],\n\n      gender: ['', [Validators.required, Validators.email]],\n      birthDate: ['', [Validators.required]],\n    });\n  }\n\n  onSubmit() {\n    this.http.get(this.url).subscribe((data: any) => {\n      const foundUser = data.find(\n        (user: any) =>\n          user.userName === this.username && user.Password === this.password\n      );\n\n      if (foundUser) {\n        this.authService.login(); // Set authentication status to true.\n        console.log('User authenticated');\n        // Redirect to the 'prod-list' route using the Angular router.\n        this.router.navigate(['/us-list']);\n      } else {\n        this.authService.logout(); // Set authentication status to false.\n        console.log('Authentication failed');\n      }\n    });\n  }\n}\n","<div class=\"login-container\">\n  <h2>Admin Login</h2>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        name=\"username\"\n        required\n        [(ngModel)]=\"username\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        required\n        [(ngModel)]=\"password\"\n      />\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n\n  <div *ngIf=\"isAuthenticated; else failedAuthentication\">\n    <p>Authentication Successful! Redirecting...</p>\n    <!-- You can add your navigation logic here -->\n  </div>\n  <ng-template #failedAuthentication>\n    <p *ngIf=\"username || password\">\n      Authentication failed. Please check your credentials.\n    </p>\n  </ng-template>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"parseRelativeUrl\", {\n  enumerable: true,\n  get: function () {\n    return parseRelativeUrl;\n  }\n});\nconst _utils = require(\"../../utils\");\nconst _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n  const globalBase = new URL(typeof window === \"undefined\" ? \"http://n\" : (0, _utils.getLocationOrigin)());\n  const resolvedBase = base ? new URL(base, globalBase) : url.startsWith(\".\") ? new URL(typeof window === \"undefined\" ? \"http://n\" : window.location.href) : globalBase;\n  const {\n    pathname,\n    searchParams,\n    search,\n    hash,\n    href,\n    origin\n  } = new URL(url, resolvedBase);\n  if (origin !== globalBase.origin) {\n    throw new Error(\"invariant: invalid relative URL, router received \" + url);\n  }\n  return {\n    pathname,\n    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),\n    search,\n    hash,\n    href: href.slice(globalBase.origin.length)\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","parseRelativeUrl","_utils","require","_querystring","url","base","globalBase","URL","window","getLocationOrigin","resolvedBase","startsWith","location","href","pathname","searchParams","search","hash","origin","Error","query","searchParamsToUrlQuery","slice","length"],"sources":["C:/Users/BNI/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"parseRelativeUrl\", {\n    enumerable: true,\n    get: function() {\n        return parseRelativeUrl;\n    }\n});\nconst _utils = require(\"../../utils\");\nconst _querystring = require(\"./querystring\");\nfunction parseRelativeUrl(url, base) {\n    const globalBase = new URL(typeof window === \"undefined\" ? \"http://n\" : (0, _utils.getLocationOrigin)());\n    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith(\".\") ? new URL(typeof window === \"undefined\" ? \"http://n\" : window.location.href) : globalBase;\n    const { pathname, searchParams, search, hash, href, origin } = new URL(url, resolvedBase);\n    if (origin !== globalBase.origin) {\n        throw new Error(\"invariant: invalid relative URL, router received \" + url);\n    }\n    return {\n        pathname,\n        query: (0, _querystring.searchParamsToUrlQuery)(searchParams),\n        search,\n        hash,\n        href: href.slice(globalBase.origin.length)\n    };\n}\n\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,kBAAkB,EAAE;EAC/CE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,gBAAgB;EAC3B;AACJ,CAAC,CAAC;AACF,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACrC,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC7C,SAASF,gBAAgBA,CAACI,GAAG,EAAEC,IAAI,EAAE;EACjC,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,OAAOC,MAAM,KAAK,WAAW,GAAG,UAAU,GAAG,CAAC,CAAC,EAAEP,MAAM,CAACQ,iBAAiB,EAAE,CAAC,CAAC;EACxG,MAAMC,YAAY,GAAGL,IAAI,GAAG,IAAIE,GAAG,CAACF,IAAI,EAAEC,UAAU,CAAC,GAAGF,GAAG,CAACO,UAAU,CAAC,GAAG,CAAC,GAAG,IAAIJ,GAAG,CAAC,OAAOC,MAAM,KAAK,WAAW,GAAG,UAAU,GAAGA,MAAM,CAACI,QAAQ,CAACC,IAAI,CAAC,GAAGP,UAAU;EACrK,MAAM;IAAEQ,QAAQ;IAAEC,YAAY;IAAEC,MAAM;IAAEC,IAAI;IAAEJ,IAAI;IAAEK;EAAO,CAAC,GAAG,IAAIX,GAAG,CAACH,GAAG,EAAEM,YAAY,CAAC;EACzF,IAAIQ,MAAM,KAAKZ,UAAU,CAACY,MAAM,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,mDAAmD,GAAGf,GAAG,CAAC;EAC9E;EACA,OAAO;IACHU,QAAQ;IACRM,KAAK,EAAE,CAAC,CAAC,EAAEjB,YAAY,CAACkB,sBAAsB,EAAEN,YAAY,CAAC;IAC7DC,MAAM;IACNC,IAAI;IACJJ,IAAI,EAAEA,IAAI,CAACS,KAAK,CAAChB,UAAU,CAACY,MAAM,CAACK,MAAM;EAC7C,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}
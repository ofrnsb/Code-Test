{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthGuard = class AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate() {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/admin-login']);\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);","map":{"version":3,"names":["Injectable","AuthGuard","constructor","router","authService","canActivate","isAuthenticated","navigate","__decorate","providedIn"],"sources":["C:\\Users\\BNI\\2023\\learn\\deptech\\src\\services\\AuthGuard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/admin-login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAMnC,WAAMC,SAAS,GAAf,MAAMA,SAAS;EACpBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAEvEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACtC,OAAO,KAAK;;EAEhB;CACD;AAXYN,SAAS,GAAAO,UAAA,EAHrBR,UAAU,CAAC;EACVS,UAAU,EAAE;CACb,CAAC,C,EACWR,SAAS,CAWrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
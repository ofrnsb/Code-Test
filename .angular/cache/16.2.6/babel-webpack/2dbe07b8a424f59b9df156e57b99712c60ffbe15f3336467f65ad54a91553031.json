{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addLocale\", {\n  enumerable: true,\n  get: function () {\n    return addLocale;\n  }\n});\nconst _addpathprefix = require(\"./add-path-prefix\");\nconst _pathhasprefix = require(\"./path-has-prefix\");\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path;\n  const lower = path.toLowerCase();\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/api\")) return path;\n    if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n  }\n  // Add the locale prefix to the path.\n  return (0, _addpathprefix.addPathPrefix)(path, \"/\" + locale);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","addLocale","_addpathprefix","require","_pathhasprefix","path","locale","defaultLocale","ignorePrefix","lower","toLowerCase","pathHasPrefix","addPathPrefix"],"sources":["C:/Users/BNI/node_modules/next/dist/shared/lib/router/utils/add-locale.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"addLocale\", {\n    enumerable: true,\n    get: function() {\n        return addLocale;\n    }\n});\nconst _addpathprefix = require(\"./add-path-prefix\");\nconst _pathhasprefix = require(\"./path-has-prefix\");\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0, _addpathprefix.addPathPrefix)(path, \"/\" + locale);\n}\n\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,WAAW,EAAE;EACxCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,SAAS;EACpB;AACJ,CAAC,CAAC;AACF,MAAMC,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACnD,SAASF,SAASA,CAACI,IAAI,EAAEC,MAAM,EAAEC,aAAa,EAAEC,YAAY,EAAE;EAC1D;EACA;EACA,IAAI,CAACF,MAAM,IAAIA,MAAM,KAAKC,aAAa,EAAE,OAAOF,IAAI;EACpD,MAAMI,KAAK,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC;EAChC;EACA;EACA,IAAI,CAACF,YAAY,EAAE;IACf,IAAI,CAAC,CAAC,EAAEJ,cAAc,CAACO,aAAa,EAAEF,KAAK,EAAE,MAAM,CAAC,EAAE,OAAOJ,IAAI;IACjE,IAAI,CAAC,CAAC,EAAED,cAAc,CAACO,aAAa,EAAEF,KAAK,EAAE,GAAG,GAAGH,MAAM,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,OAAOL,IAAI;EACzF;EACA;EACA,OAAO,CAAC,CAAC,EAAEH,cAAc,CAACU,aAAa,EAAEP,IAAI,EAAE,GAAG,GAAGC,MAAM,CAAC;AAChE"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    const userLoggedIn = false;\n    if (!userLoggedIn) {\n      this.router.navigate(['/admin-login']);\n      return false;\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","userLoggedIn","navigate","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\BNI\\2023\\learn\\deptech\\src\\services\\AuthGuard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    const userLoggedIn: boolean = false;\r\n    if (!userLoggedIn) {\r\n      this.router.navigate(['/admin-login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";;AAMA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CAAA;IACT,MAAMC,YAAY,GAAY,KAAK;IACnC,IAAI,CAACA,YAAY,EAAE;MACjB,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACtC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBAVUN,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATX,SAAS;IAAAY,OAAA,EAATZ,SAAS,CAAAa,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
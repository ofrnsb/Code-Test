{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserListComponent = class UserListComponent {\n  constructor(restApi, router) {\n    this.restApi = restApi;\n    this.router = router;\n    // Properti yang diperlukan\n    this.prodData = [];\n    this.url = 'https://652e8e2a0b8d8ddac0b197f5.mockapi.io/test/List';\n    this.editingprodId = null;\n    this.editedprod = {};\n    this.newprod = {};\n    this.isAddprodFormVisible = false;\n    // Properti untuk transaksi\n    this.transactionType = ''; // 'Stock In' atau 'Stock Out'\n    this.selectedProducts = [];\n    this.transactionQuantity = 0;\n    // Riwayat transaksi\n    this.transactionHistory = [];\n  }\n  ngOnInit() {\n    this.getData();\n  }\n  addprod() {\n    this.isAddprodFormVisible = !this.isAddprodFormVisible;\n  }\n  addNewprod() {\n    this.restApi.post(this.url, this.newprod).subscribe(response => {\n      this.prodData.push(response);\n      this.getData();\n      this.newprod = {\n        id: 0,\n        name: '',\n        description: '',\n        gambar: '',\n        category: '',\n        stock: 0\n      };\n      this.addprod();\n    });\n  }\n  getData() {\n    this.restApi.get(this.url).subscribe(data => {\n      this.prodData = data;\n      console.log(this.prodData);\n    });\n  }\n  editprod(id) {\n    this.editingprodId = id;\n    const prodToEdit = this.prodData.find(prod => prod.id === id);\n    if (prodToEdit !== undefined) {\n      this.editedprod = prodToEdit;\n    } else {\n      null;\n    }\n  }\n  saveprod() {\n    this.restApi.put(`${this.url}/${this.editingprodId}`, this.editedprod).subscribe(() => {\n      this.getData();\n      this.editingprodId = null;\n    });\n  }\n  cancelEdit() {\n    this.editingprodId = null;\n  }\n  deleteprod(id) {\n    const prodIndex = this.prodData.findIndex(u => u.id === id);\n    if (prodIndex !== -1) {\n      const prodToDelete = this.prodData[prodIndex];\n      this.restApi.delete(`${this.url}/${prodToDelete.id}`).subscribe(() => {\n        this.prodData.splice(prodIndex, 1);\n      });\n    }\n  }\n  addToTransaction(product) {\n    this.selectedProducts.push(product);\n  }\n  removeFromTransaction(product) {\n    const index = this.selectedProducts.indexOf(product);\n    if (index !== -1) {\n      this.selectedProducts.splice(index, 1);\n    }\n  }\n  performTransaction() {\n    // Validasi jumlah transaksi Stock Out tidak melebihi stok produk\n    if (this.transactionType === 'Stock Out') {\n      for (const product of this.selectedProducts) {\n        if (product.stock < this.transactionQuantity) {\n          // Handle kesalahan jika jumlah transaksi melebihi stok produk\n          // Misalnya, tampilkan pesan kesalahan\n          alert('Jumlah transaksi Stock Out melebihi stok produk.');\n          return;\n        }\n      }\n    }\n    // Lakukan transaksi sesuai tipe (Stock In atau Stock Out)\n    if (this.transactionType === 'Stock In') {\n      // Lakukan transaksi Stock In\n      for (const product of this.selectedProducts) {\n        product.stock += this.transactionQuantity;\n      }\n    } else if (this.transactionType === 'Stock Out') {\n      // Lakukan transaksi Stock Out\n      for (const product of this.selectedProducts) {\n        product.stock -= this.transactionQuantity;\n      }\n    }\n    // Tambahkan riwayat transaksi\n    this.transactionHistory.push({\n      type: this.transactionType,\n      products: this.selectedProducts.map(product => ({\n        id: product.id,\n        name: product.name\n      })),\n      quantity: this.transactionQuantity,\n      date: new Date()\n    });\n    // Reset properti transaksi\n    this.transactionType = '';\n    this.selectedProducts = [];\n    this.transactionQuantity = 0;\n    // Simpan data ke server (Anda mungkin perlu mengganti URL sesuai dengan API server Anda)\n    this.restApi.put(this.url, this.prodData).subscribe(() => {\n      this.getData();\n    });\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})], UserListComponent);","map":{"version":3,"names":["Component","UserListComponent","constructor","restApi","router","prodData","url","editingprodId","editedprod","newprod","isAddprodFormVisible","transactionType","selectedProducts","transactionQuantity","transactionHistory","ngOnInit","getData","addprod","addNewprod","post","subscribe","response","push","id","name","description","gambar","category","stock","get","data","console","log","editprod","prodToEdit","find","prod","undefined","saveprod","put","cancelEdit","deleteprod","prodIndex","findIndex","u","prodToDelete","delete","splice","addToTransaction","product","removeFromTransaction","index","indexOf","performTransaction","alert","type","products","map","quantity","date","Date","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\BNI\\2023\\learn\\deptech\\src\\app\\user-list\\user-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpCallService } from 'src/services/http.service.';\nimport { prodDataList } from '../Modals/Modals';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent {\n  // Properti yang diperlukan\n  prodData: prodDataList[] = [];\n  url: string = 'https://652e8e2a0b8d8ddac0b197f5.mockapi.io/test/List';\n  editingprodId: number | null = null;\n  editedprod: prodDataList = {} as prodDataList;\n  newprod: prodDataList = {} as prodDataList;\n  isAddprodFormVisible: boolean = false;\n\n  // Properti untuk transaksi\n  transactionType: string = ''; // 'Stock In' atau 'Stock Out'\n  selectedProducts: prodDataList[] = [];\n  transactionQuantity: number = 0;\n\n  // Riwayat transaksi\n  transactionHistory: any[] = [];\n\n  constructor(public restApi: HttpCallService, private router: Router) {}\n\n  ngOnInit() {\n    this.getData();\n  }\n\n  addprod() {\n    this.isAddprodFormVisible = !this.isAddprodFormVisible;\n  }\n\n  addNewprod() {\n    this.restApi.post(this.url, this.newprod).subscribe((response: any) => {\n      this.prodData.push(response);\n      this.getData();\n      this.newprod = {\n        id: 0,\n        name: '',\n        description: '',\n        gambar: '',\n        category: '',\n        stock: 0,\n      };\n      this.addprod();\n    });\n  }\n\n  getData() {\n    this.restApi.get(this.url).subscribe((data: any) => {\n      this.prodData = data;\n      console.log(this.prodData);\n    });\n  }\n\n  editprod(id: number) {\n    this.editingprodId = id;\n    const prodToEdit = this.prodData.find((prod) => prod.id === id);\n    if (prodToEdit !== undefined) {\n      this.editedprod = prodToEdit;\n    } else {\n      null;\n    }\n  }\n\n  saveprod() {\n    this.restApi\n      .put(`${this.url}/${this.editingprodId}`, this.editedprod)\n      .subscribe(() => {\n        this.getData();\n        this.editingprodId = null;\n      });\n  }\n\n  cancelEdit() {\n    this.editingprodId = null;\n  }\n\n  deleteprod(id: number) {\n    const prodIndex = this.prodData.findIndex((u) => u.id === id);\n    if (prodIndex !== -1) {\n      const prodToDelete = this.prodData[prodIndex];\n      this.restApi.delete(`${this.url}/${prodToDelete.id}`).subscribe(() => {\n        this.prodData.splice(prodIndex, 1);\n      });\n    }\n  }\n\n  addToTransaction(product: prodDataList) {\n    this.selectedProducts.push(product);\n  }\n\n  removeFromTransaction(product: prodDataList) {\n    const index = this.selectedProducts.indexOf(product);\n    if (index !== -1) {\n      this.selectedProducts.splice(index, 1);\n    }\n  }\n\n  performTransaction() {\n    // Validasi jumlah transaksi Stock Out tidak melebihi stok produk\n    if (this.transactionType === 'Stock Out') {\n      for (const product of this.selectedProducts) {\n        if (product.stock < this.transactionQuantity) {\n          // Handle kesalahan jika jumlah transaksi melebihi stok produk\n          // Misalnya, tampilkan pesan kesalahan\n          alert('Jumlah transaksi Stock Out melebihi stok produk.');\n          return;\n        }\n      }\n    }\n\n    // Lakukan transaksi sesuai tipe (Stock In atau Stock Out)\n    if (this.transactionType === 'Stock In') {\n      // Lakukan transaksi Stock In\n      for (const product of this.selectedProducts) {\n        product.stock += this.transactionQuantity;\n      }\n    } else if (this.transactionType === 'Stock Out') {\n      // Lakukan transaksi Stock Out\n      for (const product of this.selectedProducts) {\n        product.stock -= this.transactionQuantity;\n      }\n    }\n\n    // Tambahkan riwayat transaksi\n    this.transactionHistory.push({\n      type: this.transactionType,\n      products: this.selectedProducts.map((product) => ({\n        id: product.id,\n        name: product.name,\n      })),\n      quantity: this.transactionQuantity,\n      date: new Date(),\n    });\n\n    // Reset properti transaksi\n    this.transactionType = '';\n    this.selectedProducts = [];\n    this.transactionQuantity = 0;\n\n    // Simpan data ke server (Anda mungkin perlu mengganti URL sesuai dengan API server Anda)\n    this.restApi.put(this.url, this.prodData).subscribe(() => {\n      this.getData();\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/services/AuthService.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction AdminLoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Username is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Username must be at least 8 characters long.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Username cannot exceed 20 characters.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Password is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Password must be at least 8 characters long.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AdminLoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 6);\n    i0.ɵɵtext(2, \"Password cannot exceed 20 characters.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AdminLoginComponent {\n  constructor(http, authService, router, formBuilder) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.username = '';\n    this.password = '';\n    this.isAuthenticated = false;\n    this.url = 'https://652e8c840b8d8ddac0b194c7.mockapi.io/admin/AdminData';\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      userName: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]]\n    });\n  }\n  onSubmit() {\n    this.http.get(this.url).subscribe(data => {\n      const foundUser = data.find(user => user.userName === this.username && user.Password === this.password);\n      if (foundUser) {\n        this.authService.login(); // Set authentication status to true.\n        console.log('User authenticated');\n        // Redirect to the 'prod-list' route using the Angular router.\n        this.router.navigate(['/us-list']);\n      } else {\n        this.authService.logout(); // Set authentication status to false.\n        console.log('Authentication failed');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AdminLoginComponent_Factory(t) {\n    return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminLoginComponent,\n    selectors: [[\"app-admin-login\"]],\n    decls: 14,\n    vars: 8,\n    consts: [[1, \"form-group\"], [\"for\", \"username\"], [\"formControlName\", \"userName\", \"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"error-message\"]],\n    template: function AdminLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AdminLoginComponent_div_4_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(5, AdminLoginComponent_div_5_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(6, AdminLoginComponent_div_6_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, AdminLoginComponent_div_11_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(12, AdminLoginComponent_div_12_Template, 3, 0, \"div\", 3);\n        i0.ɵɵtemplate(13, AdminLoginComponent_div_13_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"userName\").hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"userName\").hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"userName\").hasError(\"maxlength\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"password\").hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"password\").hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"password\").hasError(\"maxlength\"));\n      }\n    },\n    dependencies: [i5.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.FormControlName],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 450px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  margin-top: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  padding: 10px 20px;\\n  cursor: pointer;\\n  transition: background-color 0.3s;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tbG9naW4vYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbmZvcm0ge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AdminLoginComponent","constructor","http","authService","router","formBuilder","username","password","isAuthenticated","url","ngOnInit","form","group","userName","required","minLength","maxLength","onSubmit","get","subscribe","data","foundUser","find","user","Password","login","console","log","navigate","logout","_","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","i3","Router","i4","FormBuilder","_2","selectors","decls","vars","consts","template","AdminLoginComponent_Template","rf","ctx","ɵɵlistener","AdminLoginComponent_Template_input_ngModelChange_3_listener","$event","ɵɵtemplate","AdminLoginComponent_div_4_Template","AdminLoginComponent_div_5_Template","AdminLoginComponent_div_6_Template","AdminLoginComponent_Template_input_ngModelChange_10_listener","AdminLoginComponent_div_11_Template","AdminLoginComponent_div_12_Template","AdminLoginComponent_div_13_Template","ɵɵadvance","ɵɵproperty","hasError"],"sources":["/Users/b/2023/Code-Test/src/app/admin-login/admin-login.component.ts","/Users/b/2023/Code-Test/src/app/admin-login/admin-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/services/AuthService.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css'],\n})\nexport class AdminLoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n  isAuthenticated: boolean = false;\n  url: string = 'https://652e8c840b8d8ddac0b194c7.mockapi.io/admin/AdminData';\n\n  form!: FormGroup;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      userName: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n        ],\n      ],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n        ],\n      ],\n    });\n  }\n\n  onSubmit() {\n    this.http.get(this.url).subscribe((data: any) => {\n      const foundUser = data.find(\n        (user: any) =>\n          user.userName === this.username && user.Password === this.password\n      );\n\n      if (foundUser) {\n        this.authService.login(); // Set authentication status to true.\n        console.log('User authenticated');\n        // Redirect to the 'prod-list' route using the Angular router.\n        this.router.navigate(['/us-list']);\n      } else {\n        this.authService.logout(); // Set authentication status to false.\n        console.log('Authentication failed');\n      }\n    });\n  }\n}\n","<div class=\"form-group\">\n  <label for=\"username\">Username:</label>\n  <input\n    formControlName=\"userName\"\n    type=\"text\"\n    id=\"username\"\n    name=\"username\"\n    required\n    [(ngModel)]=\"username\"\n  />\n  <div *ngIf=\"form.get('userName').hasError('required')\">\n    <span class=\"error-message\">Username is required.</span>\n  </div>\n  <div *ngIf=\"form.get('userName').hasError('minlength')\">\n    <span class=\"error-message\"\n      >Username must be at least 8 characters long.</span\n    >\n  </div>\n  <div *ngIf=\"form.get('userName').hasError('maxlength')\">\n    <span class=\"error-message\">Username cannot exceed 20 characters.</span>\n  </div>\n</div>\n<div class=\"form-group\">\n  <label for=\"password\">Password:</label>\n  <input\n    formControlName=\"password\"\n    type=\"password\"\n    id=\"password\"\n    name=\"password\"\n    required\n    [(ngModel)]=\"password\"\n  />\n  <div *ngIf=\"form.get('password').hasError('required')\">\n    <span class=\"error-message\">Password is required.</span>\n  </div>\n  <div *ngIf=\"form.get('password').hasError('minlength')\">\n    <span class=\"error-message\"\n      >Password must be at least 8 characters long.</span\n    >\n  </div>\n  <div *ngIf=\"form.get('password').hasError('maxlength')\">\n    <span class=\"error-message\">Password cannot exceed 20 characters.</span>\n  </div>\n</div>\n"],"mappings":"AAIA,SAIEA,UAAU,QACL,gBAAgB;;;;;;;;;ICCrBC,EAAA,CAAAC,cAAA,UAAuD;IACzBD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAE1DH,EAAA,CAAAC,cAAA,UAAwD;IAEnDD,EAAA,CAAAE,MAAA,mDAA4C;IAAAF,EAAA,CAAAG,YAAA,EAC9C;;;;;IAEHH,EAAA,CAAAC,cAAA,UAAwD;IAC1BD,EAAA,CAAAE,MAAA,4CAAqC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAa1EH,EAAA,CAAAC,cAAA,UAAuD;IACzBD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAE1DH,EAAA,CAAAC,cAAA,UAAwD;IAEnDD,EAAA,CAAAE,MAAA,mDAA4C;IAAAF,EAAA,CAAAG,YAAA,EAC9C;;;;;IAEHH,EAAA,CAAAC,cAAA,UAAwD;IAC1BD,EAAA,CAAAE,MAAA,4CAAqC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADzB5E,OAAM,MAAOC,mBAAmB;EAQ9BC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,MAAc,EACdC,WAAwB;IAHxB,KAAAH,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IAXrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,GAAG,GAAW,6DAA6D;EASxE;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACjCC,QAAQ,EAAE,CACR,EAAE,EACF,CACElB,UAAU,CAACmB,QAAQ,EACnBnB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,EACvBpB,UAAU,CAACqB,SAAS,CAAC,EAAE,CAAC,CACzB,CACF;MACDT,QAAQ,EAAE,CACR,EAAE,EACF,CACEZ,UAAU,CAACmB,QAAQ,EACnBnB,UAAU,CAACoB,SAAS,CAAC,CAAC,CAAC,EACvBpB,UAAU,CAACqB,SAAS,CAAC,EAAE,CAAC,CACzB;KAEJ,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACT,GAAG,CAAC,CAACU,SAAS,CAAEC,IAAS,IAAI;MAC9C,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CACxBC,IAAS,IACRA,IAAI,CAACV,QAAQ,KAAK,IAAI,CAACP,QAAQ,IAAIiB,IAAI,CAACC,QAAQ,KAAK,IAAI,CAACjB,QAAQ,CACrE;MAED,IAAIc,SAAS,EAAE;QACb,IAAI,CAAClB,WAAW,CAACsB,KAAK,EAAE,CAAC,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC;QACA,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;OACnC,MAAM;QACL,IAAI,CAACzB,WAAW,CAAC0B,MAAM,EAAE,CAAC,CAAC;QAC3BH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;IAExC,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBArDU9B,mBAAmB,EAAAJ,EAAA,CAAAmC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAArC,EAAA,CAAAmC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAvC,EAAA,CAAAmC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAzC,EAAA,CAAAmC,iBAAA,CAAAO,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBxC,mBAAmB;IAAAyC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBhCnD,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,eAOE;QADAD,EAAA,CAAAqD,UAAA,2BAAAC,4DAAAC,MAAA;UAAA,OAAAH,GAAA,CAAA1C,QAAA,GAAA6C,MAAA;QAAA,EAAsB;QANxBvD,EAAA,CAAAG,YAAA,EAOE;QACFH,EAAA,CAAAwD,UAAA,IAAAC,kCAAA,iBAEM;QACNzD,EAAA,CAAAwD,UAAA,IAAAE,kCAAA,iBAIM;QACN1D,EAAA,CAAAwD,UAAA,IAAAG,kCAAA,iBAEM;QACR3D,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,gBAOE;QADAD,EAAA,CAAAqD,UAAA,2BAAAO,6DAAAL,MAAA;UAAA,OAAAH,GAAA,CAAAzC,QAAA,GAAA4C,MAAA;QAAA,EAAsB;QANxBvD,EAAA,CAAAG,YAAA,EAOE;QACFH,EAAA,CAAAwD,UAAA,KAAAK,mCAAA,iBAEM;QACN7D,EAAA,CAAAwD,UAAA,KAAAM,mCAAA,iBAIM;QACN9D,EAAA,CAAAwD,UAAA,KAAAO,mCAAA,iBAEM;QACR/D,EAAA,CAAAG,YAAA,EAAM;;;QAnCFH,EAAA,CAAAgE,SAAA,GAAsB;QAAtBhE,EAAA,CAAAiE,UAAA,YAAAb,GAAA,CAAA1C,QAAA,CAAsB;QAElBV,EAAA,CAAAgE,SAAA,GAA+C;QAA/ChE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,aAA+C;QAG/ClE,EAAA,CAAAgE,SAAA,GAAgD;QAAhDhE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,cAAgD;QAKhDlE,EAAA,CAAAgE,SAAA,GAAgD;QAAhDhE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,cAAgD;QAYpDlE,EAAA,CAAAgE,SAAA,GAAsB;QAAtBhE,EAAA,CAAAiE,UAAA,YAAAb,GAAA,CAAAzC,QAAA,CAAsB;QAElBX,EAAA,CAAAgE,SAAA,GAA+C;QAA/ChE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,aAA+C;QAG/ClE,EAAA,CAAAgE,SAAA,GAAgD;QAAhDhE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,cAAgD;QAKhDlE,EAAA,CAAAgE,SAAA,GAAgD;QAAhDhE,EAAA,CAAAiE,UAAA,SAAAb,GAAA,CAAArC,IAAA,CAAAO,GAAA,aAAA4C,QAAA,cAAgD"},"metadata":{},"sourceType":"module","externalDependencies":[]}